{"ast":null,"code":"// thanh tự động trượt\nconst initLevelSlider = () => {\n  const slider = document.getElementById('levelsSlider');\n  if (!slider) return; // Đảm bảo slider tồn tại trên trang\n\n  const track = slider.querySelector('.levels-track');\n  const cards = track.querySelectorAll('.level-card-container');\n  const prevBtn = document.querySelector('.slider-prev');\n  const nextBtn = document.querySelector('.slider-next');\n\n  // Tính toán số lượng card hiển thị trên màn hình\n  let cardWidth = cards[0].offsetWidth;\n  let gap = parseInt(window.getComputedStyle(track).columnGap || '24');\n  let containerWidth = slider.offsetWidth;\n  let cardPerView = Math.floor(containerWidth / (cardWidth + gap));\n  let scrollAmount = 0;\n  let maxScroll = track.scrollWidth - containerWidth;\n\n  // Cập nhật các biến khi thay đổi kích thước màn hình\n  const handleResize = () => {\n    cardWidth = cards[0].offsetWidth;\n    gap = parseInt(window.getComputedStyle(track).columnGap || '24');\n    containerWidth = slider.offsetWidth;\n    cardPerView = Math.floor(containerWidth / (cardWidth + gap));\n    maxScroll = track.scrollWidth - containerWidth;\n\n    // Reset vị trí nếu đã cuộn quá xa\n    if (scrollAmount > maxScroll) {\n      scrollAmount = maxScroll;\n      track.style.transform = `translateX(-${scrollAmount}px)`;\n    }\n  };\n  window.addEventListener('resize', handleResize);\n\n  // Xử lý nút Previous\n  const handlePrevClick = () => {\n    scrollAmount -= (cardWidth + gap) * cardPerView;\n    if (scrollAmount < 0) scrollAmount = 0;\n    track.style.transform = `translateX(-${scrollAmount}px)`;\n  };\n\n  // Xử lý nút Next\n  const handleNextClick = () => {\n    scrollAmount += (cardWidth + gap) * cardPerView;\n    if (scrollAmount > maxScroll) scrollAmount = maxScroll;\n    track.style.transform = `translateX(-${scrollAmount}px)`;\n  };\n  prevBtn.addEventListener('click', handlePrevClick);\n  nextBtn.addEventListener('click', handleNextClick);\n\n  // Chức năng vuốt trên thiết bị cảm ứng\n  let isDragging = false;\n  let startPos = 0;\n  let currentTranslate = 0;\n  const dragStart = e => {\n    if (e.type === 'touchstart') {\n      startPos = e.touches[0].clientX;\n    }\n    isDragging = true;\n    currentTranslate = scrollAmount;\n  };\n  const drag = e => {\n    if (isDragging) {\n      const currentPosition = e.touches[0].clientX;\n      const diff = startPos - currentPosition;\n      const newTranslate = currentTranslate + diff;\n\n      // Giới hạn kéo\n      if (newTranslate >= 0 && newTranslate <= maxScroll) {\n        track.style.transform = `translateX(-${newTranslate}px)`;\n      }\n    }\n  };\n  const dragEnd = () => {\n    isDragging = false;\n    // Cập nhật vị trí sau khi kéo\n    const transform = getComputedStyle(track).getPropertyValue('transform');\n    const matrix = new DOMMatrix(transform);\n    scrollAmount = -matrix.m41;\n  };\n  track.addEventListener('touchstart', dragStart);\n  track.addEventListener('touchend', dragEnd);\n  track.addEventListener('touchmove', drag);\n\n  // Return cleanup function\n  return () => {\n    window.removeEventListener('resize', handleResize);\n    prevBtn.removeEventListener('click', handlePrevClick);\n    nextBtn.removeEventListener('click', handleNextClick);\n    track.removeEventListener('touchstart', dragStart);\n    track.removeEventListener('touchend', dragEnd);\n    track.removeEventListener('touchmove', drag);\n  };\n};\nexport default initLevelSlider;","map":{"version":3,"names":["initLevelSlider","slider","document","getElementById","track","querySelector","cards","querySelectorAll","prevBtn","nextBtn","cardWidth","offsetWidth","gap","parseInt","window","getComputedStyle","columnGap","containerWidth","cardPerView","Math","floor","scrollAmount","maxScroll","scrollWidth","handleResize","style","transform","addEventListener","handlePrevClick","handleNextClick","isDragging","startPos","currentTranslate","dragStart","e","type","touches","clientX","drag","currentPosition","diff","newTranslate","dragEnd","getPropertyValue","matrix","DOMMatrix","m41","removeEventListener"],"sources":["/Users/trunghieu/nihongo-master/nihongo-master/frontend/src/utils/levelSlider.js"],"sourcesContent":["// thanh tự động trượt\nconst initLevelSlider = () => {\n    const slider = document.getElementById('levelsSlider');\n    if (!slider) return; // Đảm bảo slider tồn tại trên trang\n    \n    const track = slider.querySelector('.levels-track');\n    const cards = track.querySelectorAll('.level-card-container');\n    const prevBtn = document.querySelector('.slider-prev');\n    const nextBtn = document.querySelector('.slider-next');\n    \n    // Tính toán số lượng card hiển thị trên màn hình\n    let cardWidth = cards[0].offsetWidth;\n    let gap = parseInt(window.getComputedStyle(track).columnGap || '24');\n    let containerWidth = slider.offsetWidth;\n    let cardPerView = Math.floor(containerWidth / (cardWidth + gap));\n    let scrollAmount = 0;\n    let maxScroll = track.scrollWidth - containerWidth;\n    \n    // Cập nhật các biến khi thay đổi kích thước màn hình\n    const handleResize = () => {\n      cardWidth = cards[0].offsetWidth;\n      gap = parseInt(window.getComputedStyle(track).columnGap || '24');\n      containerWidth = slider.offsetWidth;\n      cardPerView = Math.floor(containerWidth / (cardWidth + gap));\n      maxScroll = track.scrollWidth - containerWidth;\n      \n      // Reset vị trí nếu đã cuộn quá xa\n      if (scrollAmount > maxScroll) {\n        scrollAmount = maxScroll;\n        track.style.transform = `translateX(-${scrollAmount}px)`;\n      }\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    // Xử lý nút Previous\n    const handlePrevClick = () => {\n      scrollAmount -= (cardWidth + gap) * cardPerView;\n      if (scrollAmount < 0) scrollAmount = 0;\n      track.style.transform = `translateX(-${scrollAmount}px)`;\n    };\n    \n    // Xử lý nút Next\n    const handleNextClick = () => {\n      scrollAmount += (cardWidth + gap) * cardPerView;\n      if (scrollAmount > maxScroll) scrollAmount = maxScroll;\n      track.style.transform = `translateX(-${scrollAmount}px)`;\n    };\n    \n    prevBtn.addEventListener('click', handlePrevClick);\n    nextBtn.addEventListener('click', handleNextClick);\n    \n    // Chức năng vuốt trên thiết bị cảm ứng\n    let isDragging = false;\n    let startPos = 0;\n    let currentTranslate = 0;\n    \n    const dragStart = (e) => {\n      if (e.type === 'touchstart') {\n        startPos = e.touches[0].clientX;\n      }\n      isDragging = true;\n      currentTranslate = scrollAmount;\n    };\n    \n    const drag = (e) => {\n      if (isDragging) {\n        const currentPosition = e.touches[0].clientX;\n        const diff = startPos - currentPosition;\n        const newTranslate = currentTranslate + diff;\n        \n        // Giới hạn kéo\n        if (newTranslate >= 0 && newTranslate <= maxScroll) {\n          track.style.transform = `translateX(-${newTranslate}px)`;\n        }\n      }\n    };\n    \n    const dragEnd = () => {\n      isDragging = false;\n      // Cập nhật vị trí sau khi kéo\n      const transform = getComputedStyle(track).getPropertyValue('transform');\n      const matrix = new DOMMatrix(transform);\n      scrollAmount = -matrix.m41;\n    };\n    \n    track.addEventListener('touchstart', dragStart);\n    track.addEventListener('touchend', dragEnd);\n    track.addEventListener('touchmove', drag);\n    \n    // Return cleanup function\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      prevBtn.removeEventListener('click', handlePrevClick);\n      nextBtn.removeEventListener('click', handleNextClick);\n      track.removeEventListener('touchstart', dragStart);\n      track.removeEventListener('touchend', dragEnd);\n      track.removeEventListener('touchmove', drag);\n    };\n  };\n  \n  export default initLevelSlider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}